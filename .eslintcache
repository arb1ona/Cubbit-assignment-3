[{"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\reportWebVitals.js":"1","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\index.tsx":"2","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\App.tsx":"3","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\CheckoutPage.tsx":"4","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\ContactInfo.tsx":"5","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\PaymentInfo.tsx":"6","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\BillingInfo.tsx":"7","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\ShippingInfo.tsx":"8","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\StyleDiv.tsx":"9","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\OrderInfo.tsx":"10"},{"size":362,"mtime":1607208388606,"results":"11","hashOfConfig":"12"},{"size":382,"mtime":1611533633437,"results":"13","hashOfConfig":"12"},{"size":784,"mtime":1611775473124,"results":"14","hashOfConfig":"12"},{"size":1749,"mtime":1611687634365,"results":"15","hashOfConfig":"12"},{"size":919,"mtime":1611685135199,"results":"16","hashOfConfig":"12"},{"size":1370,"mtime":1611685752477,"results":"17","hashOfConfig":"12"},{"size":933,"mtime":1611685434199,"results":"18","hashOfConfig":"12"},{"size":1674,"mtime":1611685316919,"results":"19","hashOfConfig":"12"},{"size":2398,"mtime":1611685944727,"results":"20","hashOfConfig":"12"},{"size":3705,"mtime":1611775282547,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ez59ia",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\index.tsx",[],["48","49"],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\App.tsx",["50","51","52"],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\CheckoutPage.tsx",["53","54","55","56","57"],"import React, { ReactElement } from 'react'\r\nimport BillingInfo from './BillingInfo';\r\nimport ContactInfo from \"./ContactInfo\";\r\nimport PaymentInfo from './PaymentInfo';\r\nimport ShippingInfo from './ShippingInfo';\r\nimport {InfoWrapper, Wrapper, ConditionWrapper, Checkbox, ButtonWrapper, ButtonBack, ButtonFront} from './StyleDiv'\r\n\r\ninterface Props {    \r\n}\r\n\r\nexport default function CheckoutPage({}: Props): ReactElement {\r\n    return <Wrapper>\r\n\r\n            <h3>Contact information</h3>\r\n        <InfoWrapper>\r\n                <ContactInfo />\r\n            </InfoWrapper>\r\n            \r\n        <h3>Shippiong address</h3>\r\n            <InfoWrapper>\r\n                <ShippingInfo />\r\n            </InfoWrapper>\r\n            \r\n            <h3>Billing address</h3>\r\n            <InfoWrapper>\r\n                <BillingInfo />\r\n            </InfoWrapper>\r\n            \r\n        <h3>Payment methods</h3>\r\n            <InfoWrapper>\r\n                <PaymentInfo />\r\n            </InfoWrapper>\r\n            <ConditionWrapper>\r\n          <Checkbox\r\n            type=\"checkbox\"\r\n            name=\"agreement\"\r\n          />\r\n          <div>\r\n            I agree to the&nbsp;<a href=\"#\"> Terms and Conditions </a>&nbsp;and the&nbsp;<a href=\"#\"> Privacy policy </a>\r\n          </div>\r\n        </ConditionWrapper>\r\n\r\n        <ButtonWrapper>\r\n          <ButtonBack type=\"button\">Back</ButtonBack>\r\n          <div>\r\n            <ButtonFront type=\"submit\">Buy Now</ButtonFront>\r\n          </div>\r\n        </ButtonWrapper>\r\n\r\n        <ConditionWrapper>\r\n        By clicking the button 'Buy Now',\r\n          I agree to the <a href=\"#\">Terms and Conditions</a> and the <a href=\"#\">Privacy policy</a>\r\n        \r\n        </ConditionWrapper>\r\n    </Wrapper>\r\n    \r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\ContactInfo.tsx",["58"],"import React, { ReactElement } from 'react'\r\nimport {FormGroup, Label, Input, RowWrapper} from './StyleDiv'\r\n\r\ninterface Props {\r\n}\r\n\r\nexport default function ContactInfo({}: Props): ReactElement {\r\n    return <div>\r\n        <FormGroup>\r\n            <Label htmlFor=\"email\">Email *</Label>\r\n            <Input name=\"email\" type=\"text\"/>\r\n        </FormGroup> \r\n        \r\n        <FormGroup>\r\n            <Label htmlFor=\"phone\">Phone number *</Label>\r\n            <Input name=\"phone\" type=\"text\"/>\r\n        </FormGroup>\r\n    <RowWrapper>        \r\n        <FormGroup>\r\n                <Label htmlFor=\"name\">First name *</Label>\r\n                <Input name=\"name\" type=\"text\"/>\r\n        </FormGroup>\r\n            \r\n        <FormGroup>\r\n                <Label htmlFor=\"lastname\">Last name *</Label>\r\n                <Input name=\"lastname\" type=\"text\"/>\r\n        </FormGroup>\r\n    </RowWrapper>\r\n          </div >\r\n    \r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\PaymentInfo.tsx",["59"],"import React, { ReactElement } from 'react'\r\nimport {PaymentHeader, FormGroup, Input, Label, RowWrapper} from './StyleDiv'\r\n\r\ninterface Props {\r\n}\r\n\r\nexport default function PaymentInfo({}: Props): ReactElement {\r\n    return <div>\r\n            <PaymentHeader>\r\n            <div>Pay with credit card</div>\r\n          </PaymentHeader>\r\n\r\n          <FormGroup>\r\n            <Label htmlFor=\"card_holder\">Card holder *</Label>\r\n            <Input\r\n              name=\"card_holder\"\r\n              type=\"text\"\r\n            />\r\n          </FormGroup>\r\n\r\n          <FormGroup>\r\n            <Label htmlFor=\"card_number\">Credit / Debit card number</Label>\r\n            <Input\r\n              name=\"card_number\"\r\n              type=\"text\"             \r\n            />\r\n          </FormGroup>\r\n\r\n          <RowWrapper>\r\n            <FormGroup>\r\n              <Label htmlFor=\"card_expiration\">Expiration date *</Label>\r\n              <Input\r\n                name=\"card_expiration\"\r\n                type=\"text\"\r\n                placeholder=\"MM/YY\"\r\n                \r\n              />\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n              <Label htmlFor=\"card_cvv\">CVV *</Label>\r\n              <Input\r\n                name=\"card_cvv\"\r\n                type=\"text\"               \r\n              />\r\n            </FormGroup>\r\n          </RowWrapper>\r\n        </div>\r\n    \r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\BillingInfo.tsx",["60"],"import React, { ReactElement } from 'react'\r\nimport {FormGroup2, ColWrapper} from './StyleDiv'\r\n\r\ninterface Props {    \r\n}\r\n\r\nexport default function BillingInfo({}: Props): ReactElement {\r\n    return <div>\r\n\r\n            <FormGroup2>\r\n            <div>Please provide us with your billing information, so we can send you an invoice after order confirmation.</div>\r\n            <ColWrapper>\r\n              <div>\r\n                <input\r\n                  name=\"billingRadio\"\r\n                  type=\"radio\"\r\n                  value=\"same\"\r\n                  defaultChecked\r\n                /> Use my shipping address\r\n            </div>\r\n              <div>\r\n                <input\r\n                  name=\"billingRadio\"\r\n                  type=\"radio\"\r\n                  value=\"different\"\r\n                /> Use a different address\r\n            </div>\r\n            </ColWrapper>\r\n                </FormGroup2>\r\n        </div>\r\n\r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\ShippingInfo.tsx",["61"],"import React, { ReactElement } from 'react'\r\nimport {FormGroup, Label, Input, RowWrapper,Select} from './StyleDiv'\r\n\r\ninterface Props {\r\n    \r\n}\r\n\r\nexport default function ShippingInfo({}: Props): ReactElement {\r\n    return <>\r\n     <FormGroup>\r\n            <Label htmlFor=\"address\">Street address *</Label>\r\n            <Input name=\"address\" type=\"text\"/>\r\n        </FormGroup> \r\n        \r\n        <FormGroup>\r\n            <Label htmlFor=\"optionalAddress\">Other Information (optional)</Label>\r\n            <Input name=\"optionalAddress\" type=\"text\"/>\r\n        </FormGroup>\r\n    <RowWrapper>        \r\n        <FormGroup>\r\n                <Label htmlFor=\"postalCode\">Postal Code *</Label>\r\n                <Input name=\"postalCode\" type=\"text\"/>\r\n        </FormGroup>\r\n            \r\n        <FormGroup>\r\n                <Label htmlFor=\"country\">Country *</Label>\r\n                <Select\r\n                name=\"country\"\r\n              >\r\n                    <option value=\"\">Select Country</option>\r\n                    <option value=\"\">Albania</option>\r\n                    <option value=\"\">Italy</option>\r\n                    <option value=\"\">Germany</option>\r\n                    <option value=\"\">Sweden</option>\r\n\r\n              </Select>\r\n            </FormGroup>\r\n        </RowWrapper> \r\n        <RowWrapper>        \r\n        <FormGroup>\r\n                <Label htmlFor=\"city\">City *</Label>\r\n                <Input name=\"city\" type=\"text\"/>\r\n        </FormGroup>\r\n            \r\n        <FormGroup>\r\n                <Label htmlFor=\"state\">State *</Label>\r\n                <Input name=\"state\" type=\"text\"/>\r\n        </FormGroup>\r\n    </RowWrapper>     \r\n    \r\n    </>\r\n}\r\n","C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\StyleDiv.tsx",[],"C:\\Users\\User\\Documents\\GitHub\\Cubbit-assignment-3\\src\\components\\OrderInfo.tsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":23},{"ruleId":"66","severity":1,"message":"70","line":2,"column":25,"nodeType":"68","messageId":"69","endLine":2,"endColumn":30},{"ruleId":"66","severity":1,"message":"71","line":2,"column":32,"nodeType":"68","messageId":"69","endLine":2,"endColumn":38},{"ruleId":"72","severity":1,"message":"73","line":11,"column":38,"nodeType":"74","messageId":"75","endLine":11,"endColumn":47},{"ruleId":"76","severity":1,"message":"77","line":39,"column":33,"nodeType":"78","endLine":39,"endColumn":45},{"ruleId":"76","severity":1,"message":"77","line":39,"column":90,"nodeType":"78","endLine":39,"endColumn":102},{"ruleId":"76","severity":1,"message":"77","line":52,"column":26,"nodeType":"78","endLine":52,"endColumn":38},{"ruleId":"76","severity":1,"message":"77","line":52,"column":71,"nodeType":"78","endLine":52,"endColumn":83},{"ruleId":"72","severity":1,"message":"73","line":7,"column":37,"nodeType":"74","messageId":"75","endLine":7,"endColumn":46},{"ruleId":"72","severity":1,"message":"73","line":7,"column":37,"nodeType":"74","messageId":"75","endLine":7,"endColumn":46},{"ruleId":"72","severity":1,"message":"73","line":7,"column":37,"nodeType":"74","messageId":"75","endLine":7,"endColumn":46},{"ruleId":"72","severity":1,"message":"73","line":8,"column":38,"nodeType":"74","messageId":"75","endLine":8,"endColumn":47},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Switch' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]